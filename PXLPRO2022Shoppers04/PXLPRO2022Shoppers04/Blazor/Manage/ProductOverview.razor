@page "/manage/"
@page "/manage/products"
@using PXLPRO2022Shoppers04.ViewModels
@using System.Collections.ObjectModel
@using PXLPRO2022Shoppers04.Helpers
@inherits OwningComponentBase

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

<div class="overviewContainer w-50 m-auto">

    <h4 class="text-center p-2">MANAGE YOUR PRODUCTS</h4>
    <table class="table table-dark table-striped">
        <thead>
            <tr>
                <th scope="col">ID</th>
                <th scope="col">NAME</th>
                <th scope="col">SSN</th>
                <th scope="col">STOCK</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (ProductStockViewModel p in StocksList)
            {
                <tr>

                    <td>@p.ProductId</td>
                    <td>@p.ProductName</td>
                    <td>@p.SSN</td>
                    <td>@p.StockAmount</td>
                    <td>
                        <NavLink class="btn editbutton" href="@GetEditUrl(p.ProductId)">EDIT</NavLink>
                    </td>
                </tr>

            }
        </tbody>
    </table>

    <br />
    <div class="form-group mx-sm-3 mb-2">
        <div class="text-center d-flex w-100 mt-2 dark-bg">
            <a href="/manage/products/create" class="text-center p-2 w-50 m-auto btn editbutton">ADD PRODUCT</a>
        </div>
        <div class="text-center d-flex w-100 mt-2">
            <a href="/manage/stocklogs" class="text-center p-2 w-50 m-auto btn btn-secondary">VIEW STOCKLOGS</a>
        </div>
    </div>
    <br />
</div>

<style>
    .editbutton {
        background-color: #7289DA;
        color: white;
    }
</style>




@code {
    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Inject]
    public IProduct ProductRepository { get; set; }

    public ObservableCollection<Product> Products => new ObservableCollection<Product>(ProductRepository.GetAll());

    public ObservableCollection<ProductStockViewModel> StocksList = new ObservableCollection<ProductStockViewModel>();

    protected override async Task OnParametersSetAsync()
    {
        await GetStocksData();
    }

    public async Task GetStocksData()
    {
        ObservableCollection<ProductStockViewModel> tempList = new ObservableCollection<ProductStockViewModel>();
        foreach (var product in Products)
        {
            tempList.Add(new ProductStockViewModel
                {
                    ProductId = product.ProductId,
                    ProductName = product.Name,
                    SSN = product.SSN,
                    StockAmount = await GetStock(product.SSN)
                });
        }
        StocksList = tempList;
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }


    public async Task<int> GetStock(Guid SSN)
    {
        var stock = await APIHelper.GetStockOfProduct(SSN);
        if (stock == null) return 0;
        return stock.Amount;
    }

    public string GetEditUrl(long id)
    {
        return $"/manage/products/edit/{id}";
    }
}